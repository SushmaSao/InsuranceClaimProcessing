
# Stage 1: Build
FROM mcr.microsoft.com/dotnet/sdk:8.0 AS build
WORKDIR /src

COPY ["Common.Application/Common.Application.csproj", "Common.Application/"]
COPY ["Common.Persistence/Common.Persistence.csproj", "Common.Persistence/"]


# Copy the solution file and restore dependencies
COPY ["IdentityService.Application/IdentityService.Application.csproj", "IdentityService.Application/"]
COPY ["IdentityService.Domain/IdentityService.Domain.csproj", "IdentityService.Domain/"]
COPY ["IdentityService.Infrastructure/IdentityService.Infrastructure.csproj", "IdentityService.Infrastructure/"]
COPY ["IdentityService.Persistence/IdentityService.Persistence.csproj", "IdentityService.Persistence/"]
COPY ["IdentityService.API/IdentityService.API.csproj", "IdentityService.API/"]

RUN dotnet restore IdentityService.API/IdentityService.API.csproj

# Copy the entire project and build the application
COPY . .
WORKDIR /src/IdentityService.API
RUN dotnet publish -c Release -o /app

# Stage 2: Runtime
FROM mcr.microsoft.com/dotnet/sdk:8.0 AS runtime
WORKDIR /app
COPY --from=build /app .

# Expose the port your application is running on
EXPOSE 5001

# Set environment variables (optional, depending on your use case)
ENV ASPNETCORE_ENVIRONMENT=Development
ENV ASPNETCORE_HTTP_PORTS=5001


ENTRYPOINT ["dotnet", "IdentityService.API.dll"]
